(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    220045,       4289]
NotebookOptionsPosition[    218964,       4248]
NotebookOutlinePosition[    219322,       4264]
CellTagsIndexPosition[    219279,       4261]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Analysis of CDC Data for the purpose of verifying Google Trends\
\>", "Subsection",
 CellChangeTimes->{{3.697659566190866*^9, 3.6976595909977407`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cdcdata", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Desktop/BioPhys/flu_project/data_inputs/FluViewPhase2Data/WHO_\
NREVSS_Combined_prior_to_2015_16.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"cdcdata", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdcdata", "=", 
   RowBox[{"cdcdata", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdcstart", "=", "\"\<oct-08-1997\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.697659614480442*^9, 3.697659661853549*^9}, {
  3.697659846813765*^9, 3.697659852078289*^9}, {3.6978951922725697`*^9, 
  3.6978952167759027`*^9}, {3.697909642425695*^9, 3.697909653743408*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"REGION TYPE\"\>", ",", "\<\"REGION\"\>", ",", "\<\"YEAR\"\>", 
   ",", "\<\"WEEK\"\>", ",", "\<\"TOTAL SPECIMENS\"\>", 
   ",", "\<\"PERCENT POSITIVE\"\>", ",", "\<\"A (2009 H1N1)\"\>", 
   ",", "\<\"A (H1)\"\>", ",", "\<\"A (H3)\"\>", 
   ",", "\<\"A (Subtyping not Performed)\"\>", 
   ",", "\<\"A (Unable to Subtype)\"\>", ",", "\<\"B\"\>", 
   ",", "\<\"H3N2v\"\>"}], "}"}]], "Print",
 CellChangeTimes->{3.6978952581795883`*^9, 3.697909654923106*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hhsregions", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/Desktop/BioPhys/flu_project/data_inputs/hhsregions.csv\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hhspolys", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<AdministrativeDivision\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"#", ",", " ", "\"\<UnitedStates\>\""}], "}"}]}], "]"}], 
        "[", "\"\<Polygon\>\"", "]"}], "&"}], "/@", "#"}], "&"}], "/@", 
    "hhsregions"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.697901774353792*^9, {3.697901825095951*^9, 3.6979018358558617`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"datetoindex", "[", 
     RowBox[{"initialdate_", ",", "date_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Return", "[", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"DateDifference", "[", 
        RowBox[{"initialdate", ",", "date"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"indextodate", "[", 
    RowBox[{"initialdate_", ",", "index_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Return", "[", 
    RowBox[{"initialdate", "+", 
     RowBox[{
      TemplateBox[{"1","\"day\"","days","\"Days\""},
       "Quantity"], "*", 
      RowBox[{"(", 
       RowBox[{"index", "-", "1"}], ")"}]}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dict", "[", "___", "]"}], "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"keys", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"Length", "[", "cdcdata", "]"}]}], ",", 
    RowBox[{"i", "+=", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"date", "=", 
      RowBox[{"DateString", "[", 
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{"\"\<jan-01-\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"cdcdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"cdcdata", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], 
         TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1],"\"wk\"","weeks",
           "\"Weeks\""},
          "Quantity"]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dict", "[", "date", "]"}], "\[Equal]", 
        RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"keys", ",", "date"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dict", "[", "date", "]"}], "=", "0."}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dict", "[", "date", "]"}], "=", 
        RowBox[{
         RowBox[{"dict", "[", "date", "]"}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"cdcdata", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{
            RowBox[{"cdcdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "6", "]"}], "]"}], "/", "100."}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nationalcdcdata", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DateObject", "[", "#", "]"}], ",", 
       RowBox[{"dict", "[", "#", "]"}]}], "}"}], "&"}], "/@", "keys"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxnatcdc", "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "nationalcdcdata", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minnatcdc", "=", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "nationalcdcdata", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.697895077774767*^9, 3.697895081278675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"nationalcdcdata", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6978953390485163`*^9, 3.697895358524881*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxF0V9I01EUwPHzm0qapSvtj8rcJiJKkMM/PWX7Hazpg8KMzNQEESxRcu7B
AiNcBREU/SGXCApjErbVQ2BvmQwrFkEwFaQXx9C1EwQ5TUhFf8ffvS9duFw+
Dxe+h2Ptcl3sNgBAkX7Fq5+BwG4C4f8JRfYS+KqhtycFSlTdxi0tgW2Ly+t7
bBPuNAPhqT61jLlA+J1DITTN/+0AKBaGfgPh+ND7SY1zhJ3eFMIzF0wBAIuw
byaVcKXz+jpztXByNY3w1p8VP7MqrGYeIPy89OutAueFn1WkE9rmFr6CekU4
1ppBGH1Rs8X2fmHb3YOELd5wXDMPCXteZxImb+xMs+uh7FvQHQ14bmvhJ7Jv
5xDhTOrUOXA+l33WLMI+Z1U2JEdlX3024aKvpxBKx2Wfy0j4jeNrWvmY7Bs9
Qmj88aiFP4zIvtmjhBO77ss89Vj2/czR/3Opj+0e2Xf4GGF3NPgbwC37qo4T
Pqg/+xRi14Qj7ScIg+mf5pTQVWHL/ZOEm3nTY4p6SXggmEdYfHMwxsMO4dB8
PuE9v71ZgRq5n+0CwkhjU5yHa+V+LCZ9nt6Nf8yVcv66Qn0/29+zDHBazu8y
E96pbvLqaXL+lxZCf234DbNVzv/RSujI/eJWoEjdB7sLzGw=
      "]], 
     LineBox[CompressedData["
1:eJwt0V9IE1AUBvCzJiwqhhCEWLSJmA9CzKZRlm2ffzYyDbcsciu2VUImpULU
Q4G2QkLoHyypNFoFiwhKEqLImRIS1EPSQ4ILGjQ5CRZ7q4220+7FC5fLDy7c
77un7Fivt2sVEZUXtjoLK/l5B6Nn4XKJgchZsO3PTsbsr6HyvKxXHty8i1Hv
tftyYlKea97NeN2T9hOVKFtP1zMCC1s+iVQr90X2MOZPjmXzUqU8/dbBOJ8K
FRlok3LxDyfDXZpLidiUg2saGKZERU6kTnm8upFxLlZlJ3IpU2cTwzZTMS/S
pNw+2MwYHZn4IgMdytEnLsbYh5BN3h3XeTJuRlFy6btYzuo81r2Mj1vjj+jq
JZ3H3cK4H20zS+WwztO7j9H9PtRNNbd0npFWRp1jtp+W7+g88TaGJzHkoSuj
Os/ifsbUt0q34cRdnWddO2P1je3XKanvR+0exszDWCtFI8ppn5ex9Hw5bAjq
95zhA4U+r4pTlAwr33zawcjeG87kBy4qJ+cOMozmf0YKntLz+HuIMVET20DW
Lj0Py2FG7eKLWnL69TxcnYw3pdnHItD9z/gY/KDxGpH+z77bfsbviPnryn9P
Tx5h9D+LJ/JSpvunjjJ+XnhpEtmo+68NMHzGlsyKx7cFGQhYGgyUdvwHe5HX
hw==
      "]], LineBox[CompressedData["
1:eJxF0V1oklEYB/Bnu5g4CYWCEbRstCiipauwoGI+0CbVRdIEbXRhUUSfWyHp
Gua7mi1rmaFrH5rZzfLCaNGFUKPtYkQUtPeqi+hDWvCQNzMKY5A+vees6MDh
8OMcDv8/T9PR7oPHawFgvbbFqS1n2UeYHP9dYW61a840XiTExkw7gHRpj58w
mlqMAziE7WcChIGpwU7m/cKxeC/hWGzvOrC7hQvPLhGe1OVNzEeErV/6CJuz
qgUKp4UVfZAwcrinjkPnhVXrZe2/YzkbGxXhNZ4Q4QE4ZYRsRLgnpBAuc72c
5rm48MxEP6HL1zzCC2PCprdXCN/v7vWALSPzmAe094WWGHxIyzwdYcJUITnB
DaMyz7lrhJt3mherjqjMMzxI2PAgGmTjgMwzdZ0wl8rpatU+medrhDDxwnSh
avbLPIabhP5I8VGN0i3zbBki/Nj1Rs+hEzJP1y3Cb/WfY6B4hL39Ue3ebVF5
2ik8mb1NaPv0WgXYJwxqjLBuPt8Jil3Y+esO4car5U0AW+U8VscJHa7ijb8u
tScId00+CTNvk/M4O0z4zqrfAbBd9k/cJVye/z7LbJH9n48QrhzyPa3wWtl/
fpTQUIQWbf6yf/04Yccq96uaJautScLZoDcNsEL2P5QitG4IPGbWyf7KPa2f
oYkqS555mCb8GY79qPJCm+g/d58Q/i9vOfPPpbY/wDDtzg==
      "]], 
     LineBox[CompressedData["
1:eJwtkm1Ik1EUx88zkKz1MiLK6qHmjMT64EQjqg/uiE6IIlFG0psRGWGWC2IW
MZ8wilIIM0oIAzEqioxaFrraWEap5XwZZgUTXNlz+rBsgUGB2+m5ly5c7v3x
vx/O/8fNPFRXXm0CgHXGFqexQuoTwsvbdBdAotBgS7GPsOJEPEsBi8Pgg8ee
Ek5mNruYlwh+3NpNWLtneDvzRsHgf0a4KVm9RQG74LLYc8KfvrkdrBUJ7kjv
IbTPNM1nrURwIreXcKdz5U1wVAh27PYTTvf91rmwUnBLwwvCnl+T7QCHBU/d
eUn4qEZXU2trBdvDAcIDP8LLeNdpwedmg4R5nbfNMHVW5u4QYeTW0DQkGmTe
9oqwLG1zF9dfEjwa7CM8OeTLVsZbBFv114TmeUU+mLsm2L3oDWF9XvgUt7UK
DhW8JbSk5d+FDPnesq+fcP31HB3+XJR+zg8QNpu8Nr7XKP08GCRcvsDWDh1e
6SfyjlA9br6QYrf08/c9oTdbtaeqjko/1jBhhuvKF646Iv2UDhMGv5sGFcd+
6aduhHBDMj3OXC793Bg1fFr1Stac0k9gjLDXsybOWqns/y1COLu6M8ZcIPsv
HCdcmrXVD2CT/fM/EK6KBs4keYXsv3eCcCLqcRpX2b/xI2H0qur5/x9C9z8R
PszRuhRjFtF/7DNhbHHuV8XI/wFXd+gv
      "]], LineBox[CompressedData["
1:eJxVlHtMk1cYh89XULkp5RZwCNRLBHVCgYm7sNFXoKBDrMhFCkqFqXEUIRoT
NqNUXTI1GkFgLro5lElBZTQTtmWC7cyUZJuAWabRP2YDmO/VeenGzXH5zr5z
2izplzTNk/c0/T09768LSytztisIITvlF3uXH0PFcxECe0P2EKLSyGxpeCFC
1K7RekqDGJPulyLkSnoP11w35BAhqXFHJSHxjJt8/hHh0ylbskCWM3bEj4iw
/VbVPuJkTeGoCIaGrc0S1TKuNY2JkLz/x2lao2FsN4+LcL5AsY7W5DBW90+I
cGrII5Bacxmbxl+JcJDo/QRbEeOBiEkRGsOnMontA8aq9CkRtEnTQQIp53k+
mxbh6/sWB43bx/P0zIjw09rh30i1ied5LIkwPHLcLFWe4Hn8CMIdy8Z71Hqa
50kUEOYFV0fTK408T5EC4drL43b6/Rme57AHgt8OxRvk87M8T5snglf+H7/S
Kc6qu7MQxlKNFtLAP1/1ajZCrbWzld6vZWyL8kLoPeEYJ5lHGSszvBGe92wq
JupDjA27fRDiDpwfo9b9/D4afREu/extJo69/D56/BD03oeNknU3v4/huQja
hzdiibKK+/v6IxyNNtillDLun6BESLh2MkNh46zRByC0ZcXPEezbuP+hQARx
nedlas3j/q1BCJq6j+sEks39B4IRGp989S+tAe4/EYLQYukqJ+Rt7h8ZinAj
zHMVIWHcXxuG4Fwtwv0r5iNc6PC/IKty/4bXEAbPf3nTNVd2hyP8Hrqmb4q+
TGH+Qwv+/zx7LD6RCGuLA7QzlLI5SYhym+sKVW7cZFroxg7zIjfW9C9G2LV+
sNT1fbXjS9zm9oilbqxOj0b4IrDrwQydw/2NMQhQErVGcOYfqF/mdl51fTmC
8exImeQ8XzW4wm1u816JkFxaMEeiodw/PlaeV9WpBBLM2LA5DmHycm8qcbKl
Ro1wfO9HYZQuZkzM8QiBcSFy35IY6/oSEPYUrHgq0ZWMm8YS5fNhipuUpjJ2
LFiFMN0SdGCaFjDWpCUhLPo7fJRadzKuLV+NkDjrdh6x8/1Q9rwp79vtRxul
lFKeZ/gthM5232GphO+bxfcdhB+EJ1eJg/eLJCYjBNwanktaeb90+ncRVB1X
H9Azx3ieQ+8hnM2QDGRJPc/TmoLQfsnUSffX8TwDGoSL381tJpaTPM8EyPsR
63eRPuL9tEemImT/8iJIsB1hrNamIXyrTsumG3hfTBXpCMp7+hHJ/yC/jwYt
QqXx9VDSxPug6s5AaMhqa3H5Vg1lyn31jd4lWfWMbT7r5DyG7Qcp5fuvTHgf
YXaN0EXpWu5fmIVwpL3iMTHpuL9pPcInhycmKV3N/VuzESLvjmxx/R/q+jcg
nDv9oZnSOO4/rpPzH3v4zHXfjogc+fz8K3coXcb90zchLPnGq9k1rzXmyv0y
ZkQLzr7Y6/MQQkf/DFM49019PR/hqe9Ccca5v6bBAgRrk73HtW8D3oUI+Fdq
jKtvqng9gjqmuoNSf+6/uUju8+P8PkqjuH9NsbxvOc+WElcfzVsQYr3OOQTi
xf37trr3cazEjUnENre+69JK5fubFzckEAfL11ReJv/+XXmlrC//AXkMRFg=

      "]], LineBox[CompressedData["
1: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
ux2mtN22k0aJ3wue9ajJj3l6TTz+D7DFZrE=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.0852576*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
       
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
         Automatic]& , {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{2.9979072*^9, 
        FormBox["\"1995\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox["\"2000\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3135264*^9, 
        FormBox["\"2005\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox["\"2010\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.6290592*^9, 
        FormBox["\"2015\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.7868256*^9, 
        FormBox["\"2020\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9979072*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0294432*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0610656*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0926016*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1241376*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.187296*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.218832*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.250368*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.281904*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3135264*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3450624*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3765984*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4081344*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4397568*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5028288*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5343648*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5659872*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5975232*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.6290592*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 
        0.}}}, {{2.9979072*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3135264*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.6290592*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.7868256*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9979072*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0294432*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0610656*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0926016*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1241376*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.187296*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.218832*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.250368*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.281904*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3135264*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3450624*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3765984*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4081344*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4397568*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5028288*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5343648*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5659872*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.5975232*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.6290592*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{642.71875, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.0852576*^9, 3.6526464*^9}, {0, 13478.000699}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.6978953514855223`*^9, 3.697895359844905*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"byregion", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"DateObject", "[", 
            RowBox[{"\"\<jan-01-\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "]"}], "+", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], 
            
            TemplateBox[{
             InterpretationBox["\[InvisibleSpace]", 1],"\"wk\"","weeks",
              "\"Weeks\""},
             "Quantity"]}]}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "*", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "/", "100."}]}]}], "}"}], "&"}], 
       "/@", "#"}], "&"}], "/@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"cdcdata", "[", 
        RowBox[{"[", 
         RowBox[{"i", ";;", ";;", "10"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"\"\<X\>\"", "\[Rule]", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ibyregion", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"datetoindex", "[", 
          RowBox[{"cdcstart", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", "#"}], "&"}], 
    "/@", "byregion"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.697896692955102*^9, 3.697896716103733*^9}, {
  3.697909879241189*^9, 3.697909883671537*^9}, {3.697916978527493*^9, 
  3.6979169789991093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"byregion", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"Opacity", "[", ".8", "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<CDC Case Counts by Region\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\"\<HHS Region \>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.697896532295329*^9, 3.697896532932929*^9}, {
  3.69789656490448*^9, 3.6978966025028563`*^9}, {3.697896668198296*^9, 
  3.6978966843570127`*^9}, {3.697900108605192*^9, 3.697900198687789*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1: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
8OlfJfU4iOzP/EM+/+U990qfo/2zF9wU4J+jU+PcfT5F9lf8T4C8R8s2qvqi
/TT63ib+1o74aAv7U4DpQ+FmE77fVMf9JUDgy/sRQ/odAWZmnf3Tje9DrDl3
ZX9UsnCJF+4/MKX35OfDss1u7H/Z0PtyPPi3Z/dGPA9gjymX7b8wZpMXjlea
VIf8+btLx5P5CmN2hQBr9i+71gL312znKgVy/4T8hbqqSoCfajZ29ML5kcH/
oQCtL/VeS/Ira/gjAVTmtHI3nu9jEjiB1G+oH6JneVlvqF+M+vGWPEGASws6
vuGN599cZaIAl78797kXjse6WqcAT1D9iOc/Qv71xA/0eUf0Yzl+1v+8nCH+
O+UJlV+zWS75/SMfTSfP7YX/Cc3vCzSVT+X48nJ+x+hX7cn3UL5g09bQ/ju+
ls6nTHVUfLLm1tP+u+w57b9rXtD+O7jR40/R+lxRTR570Xp0yW4KmzMl2b+K
BweQ/XMUMCLlvytUIlTn/DmR5D+sr7dI+pW43g5rITafz9DEtRTh59EjN6tI
vyXdR4S7k+tmk/rPltNKhIMRmfs8/ZZSXxH+VkU1NOH60VDtJ8L7pamLWuDP
W4MCRPjgtyJ/z31BVGsRdq1a3FbC+bM+qY0IG8d88oOnH5vRVoQ4ZD+eFz3b
TgTr8zx/0u/VOdQi2NH9HcofzK3ai4Q/iN+OQR1E6BC3aTLxl9oZr4qkvzRK
wey6jiI5X9QPtx97TcT5FIP0o7kaKEKbxvwtTRKu7591EnE+lojihyu6i2xv
u1UGhkH+Q5cSJMLJd+pz3IdwfZMVLMJM09uMeynKzxyFISK0O7S8u8qyDq2n
MlSE3DZbc1RqhFk/jfx+w28mlc2E1qPtJkLg/Yfd3U/S0Xriu4twzKvPXcaK
Pm809RBhoOZ0qPsUytdsuT3JeeN5I3VZLxHyvR5/7C5G6zHU9Cbrx/0+a3Bf
EU6geTtUrzHR/URorcQzFsVLfXJ/EVYzOxpfSMg/WzIHiLCwT6mW7Jer4HUR
fuk496YkIX+hqxgo4vkkfF9m9g0TYfyoIVtJfHeEaUXoM2DL1944v9PGhVP8
ZNMjxOb6tOcMpp5rSodQ2Fg9VITJK4SOLcl8ZNAw6rk6arhI+ke43k56k3pu
zRhBYaZgJIX1jlEivNtsHq3VGOq5a9BYsbk+dTN0Iqmf8P3VOhBh0cTKeQQ7
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
c9/4aw==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1: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
MTov+X6G8vcV1oonyN89MfQn94+YAA7pIz55pCefj+RFMi/A/VdLoiBCl2Vn
/Ml9RVea6OGvwseTTsTX5TNuefTo+EeEq3/3PELyLUfjZyIk/Pf3StrQ52L9
+0XsJJcIG/6b99hXvhDr10OafS89WIlX116h9//71SWeePWqQiT34ZT7Tx2q
RDj4jbrYi+RPQ6upfM8657Un/uL9M2lvRFihauxWMb2x/SdqkD8bcXwe6ddY
Hr1F9Q0/IkRS7lO7GtWR81HmaboQN9LTi1WoPsXnZZ4oofpiRMvnjHK+jhWM
Ex7diQ0h99W0e1VO6In7x8q88qqXE1bM+OpmbQnWg/2ltxMm4L+3wfzVtG/o
VPq7Sv/DCI2cUDD30R73coX/sxs74XyquTdj347tN/s44c13p6ZKv+/A9h/3
dUKGseM25jVetz70c8KL3VGfuLthPTl8/J1QuaZghMqxFe9P24T8/lEcj9iY
pk5otVWT5cXjdfuqd5zQdOPy3nXrsd40uc2ccETuF2/A+jUWqZ2QE3QvnNHg
eGiraO4EfoxVqilR+j8BLZ2QmHy4YZ0J52uGyHed8HZRi+buHKxHa2IrJwTG
bjWrHOR+Umun0p8MVv7+72QbJww/eCGP0eD3aXG0dcLMcZEdyPt1NW7vhBb4
7w2V+7KhHZygk/07i+sn86QAJ7S9Mfiem8zTVgY6oeuQxavrlHpUuy/ISeIX
jk/stWCnkj8q9av9lcYJ86u7tyDzbk2HTk7Y6qrSkPuoxqGdnST/wd+3zeni
JPMNnN+p07o64eNv/rI3UuKB4cR7TpK/K/n9o25OMOL6SumXN+7hhHScvyn5
VEhPZ/3+r2ViLycMWDf0N1K/uVb0dpL5jdIv3tvHWX/eZL4a4qxfLzhehjoh
67/76Nr2Yej5G/pOIPGEhXAnyc9w/mmf3ddJ+t8Ya8zvO0k/GdtnPN4PvS/c
D8V6sj3s7/m+Vvd/HNkdUA==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1: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
Zjf4cpCx2Neq0rxB1rOvEwdR/wzqrGJXkPWc9+Pg6e5lHhVLnhsfdOag6+lX
7niU+GeLCODg1KeSwerI+9UTAzlgbs45JGWqMjbkBHG0HlPssTiYg4lyfGST
ZMwc7cLB1K6Xbnjt8XpXDpJbXu7eZiLPLcHdOLjtjgmXlkL4x6g5uDNO+EgU
+xP+c7pzHf2XOa8HR/ebYEdZTw6Km9espfajtffiwPWffbL3H5feT96n1HPh
vTmkx6Q+CBuz+yJsK+qHsLoqBGFDQyjC1qBwhJmYCIT1aRqELWx/hN2lAxDW
1Q5E2NwyCGFH2JMIaxOfQpjNGoKwvXAo5n9kGOZf/zTmHzgC84+OxPxTozB/
k5aj9Qnxf0xpNOZfE4P5N4/k4PuSJ03e/DF0tPc5ye91CWM4OLTN5zePogdz
5lgO+sxbPlEUST2gPjqOgzORR3fResdwfTwHfzf/1kvFknhlDX6Wg9S1fwX7
UT2OfI6DLmuWdlGxRK/6Oc9zSv1kmiljS94EqmelH+Eui+Vg89iYrW0K1tl1
HIR9+8QOH4bUJ+b7wAGQeEq+zxEez8H5tQsCGCZWxtqkBA6u5X97uU0kmM1O
5GDQazNGiuIYGduLkriO9Z2maqLEb9PUB1TfxoZJEp8Z9+fR/NAW9CLXMb6o
YyZzkF8+4MNWBRvSpuDzYKdiPZZNw+dROx2fR4se6zHsJazHxJlYj1mzsB4L
Z2M9HknGeqxPwXoMTMN6jJ6D9Zg6F+vRNA/rsfRlrMeaVzD/5nTMP+xVzD9h
PuafuQDzL1iI+VcuwvzrXsP8AxZzkNYzp8Trj7RLMP+UDA5W/tcfsudmcrCh
Qz1bksXB1lWLHxPFZ2RsrM6m+hRJ/mNryuFgzxTJo+tekbE61MjB7J96rmlP
XyJjQ/wyDiwn161WsaT+sWa8Ifm/3+9+olLyKaZgOafUT7HzZKyveNPrj0k/
gG2QsNkWkesRn5OxPegtai9MNFlfzEoOxtz4ZjTDPEnWl7ZKet7P51NGiXc2
drW0flLvED7qsjVePv5kfbVrvfuh9D9a1uHzCc/17o9S3ySa8Plksfh8CvPw
+RzZgM+nfiM+n8C3sT6j38Hnk/ou1qfpPazP0vexPms2Y302f4D1GfYR1mfC
FqzPzK2Yf6EZ67MyH/OvK8D8A4owf20x5p+yDfPP/RjzL/kE86/+FPNv+gzz
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
mxcmmhbK2BzzteT/65eu9WGIPTnS9vPgI/fHTUr8yjvAQ6fZu1N8lXjGlh3k
4ZOp7KsPxRdkbK/9xms/JD5q7lt5yJT9gVIPGcO/44FzxQ+h8daW+L0UL8j8
gPgTdfYhHvZteqqpNZZ8v6HoBx5mVu/fy9jI/QrrkcPS+zaUPWIYJX43/MhD
7bVNcZ1Y5f5TUIWkz4Jjc0SRzNcs0ZW80i9X+pnu1CNSfF9cFNmu5Ac6toqH
n6v3LaTzaXPpUR6yheeGeURlXlBzTHr/xL7LVAyJ19qW47zS37eR72fDTvBw
IX/gFyqG7K894Scezn9zYIfHlE74Z53k4bv55c/QeYOx8JTkH9p2dWo/TvID
W+XP0v5lvDbCj5lK+Nf/wkORnD8r80JD4GnqX0zk+63aX3mY1HposyeC+Dcm
9Yzk72R/o2C96Syv1B+x5D6XpeQcPY9Y0u9yV1fzULzgu3LxGplf6JpreBjb
zzaXWcUS/qF2HroU9UplTm8i/OPP89Dj7W0rRP/3CP/M3yT/pZ8eoTKsJfwL
fuehcuYzqeIOZV5S8QcPr7bvONl2nJyfpu4CDymvjrT56ch+GQMu8vCc8OXT
DEPOwxb1l5TPjC0ye0Qyb1SnXOLhKun/kvmOIfcyT/vFiv73/s3DM2dOZPko
emGqr/Dw0X/3BdjwqzyUk3x/AFlP4jUe0led6UbzI022g6f3Bwg2FtVJ/rzv
C+falfsDtiP1kl4MpybQ/p26oYGn/WlyP8EQdIOHXfIASOk3WqNv8rTfSJ4z
aU4e+pJ+O+lf61lOirfFFbMYhujNUspLehtas5/OV901guTfM3VDRZF8n67F
JeVXh6ZuE0XSnzeH3eLpfEepbxJu83Bs3JStKqWfqM26w9P5M4k3bKEb+6/K
uzw0k3qUPNfU3/Pm20p9E9iE/be2Gfvv1Bbsv033sf8ueYD9d81D7L+bW7H/
Dm3D/ju+nepXWZ8u04P9d4GI/XcFI3TML7V1KqFjf58N8BUQ/6hOAvwc1jjM
W9+l+KHnxtzOCNv2+gvQ87/7I+rqAKFj/9nQFIg+bw0JRpiJ74KwPqOrQOsd
ZX6Z/5gAy54alkvX4y7vJiD+DjX6e7N/DwGeu6fdQNfjiOzp/XuFf3Ivgd7f
Ivpg1z8uQEK3TEe7ch/IvucJAV6ctCeb9qs053pL+6FqeuQxkfrB2NhHgHLX
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

         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1:eJxVW3l8TNcXf5MIWSxTSy3ZRlFFJZOgqLaZE0mopaYlslgybW3ZGJRaMy+p
UmoZWWipGmSjllGqspBRdEFiKKqqTBK8ZX4IsliSeb/37r3zqeuf9vt5My/3
3Hu+53zPOXd6fjLvo5keDMPs92QY5b/yP+Pe5nvA/PfPZm+hsPqpi8KGYIZ7
GVtjVBRm5npQWJ/nSWFLeSsOXkT+vlSSHkbIuK7WiwP7X2v08v8qWOfXhvq8
Odybg9RzSakM01knY0eCDwdHt3hcdkkDFazN9HV/foiC2WI/DjbGfz1BxX6k
YOtlGa+Ksc5vMU1VMPO8LQfjk1sGqhzJCtb3bM9BSsPVWBU7X8GW0R04mPj6
kKMq3UIF181Tc1B7b1I4Y/lMwbqtr3CgjS4Z7DLNUbD5ZEcObFHli1y3Z6D1
3e3Ewfn81W8xbDRaX7suHHw+Y/9bkvQuWt/gVzlo63vLKUn9FGyf0pWDmel5
8cR+zRfdOEjIOX7dJXVQnhv3daf2w3apB4XVz/zd+6NWPm/QBNLnMyqIPp95
wfT5bNHQ53OiJweQFBypkm1V7L/zGvVc17Y3fT6D+lDYkfg6hbVZfSnM7n2D
wnZ7PwprnvansDH4Tdr+mIG0/XNDKGzIC6XtL9fS9t8Jo+33G0TbHz6YwnUJ
Q2j7M9+i7S8eStt/cRhtf9Nw2v6gERzMHl/zyQtJUs7bHv0ObX/6u7T9ue/J
5ztm3w4X5outLIK2v1ZH2+8bycFX2yf+QfzJGjZS9r8z3fcRvjEJURx8uFjo
4oXPV89Gc5A3xJIrSX0UbCmK4WDAi4PeLkmnYM2zURxcOnRgp8s0WsFGzfsc
PDCceU/FTFSwbdQYDg5U9GGkpE8VrJ43loOGkhvrWiJmKdiwZZzM96npZ10X
EX+sJ8ZzsKxm+BRGt0jBzN0POHh2Y9BYDzXim76tnoN/xeFCS3AaWs+gDzno
LkTfdyUZFFyX+BEH+7/+Zw6jS1CwLmsiB++ET94uRSC+m/dO4uDh7/HpLtP7
CnbYY2U+uxLliDdMwdqnkzk4M61blCQNVTAbHM/B4ZC5e1TMewq2xyRwMH/N
1kcM8zqyf24iB7n3+d7yV5H9eVPI35O6IvvLp3LQMW7VhxLmq/rONA76p+r6
SVInZL9fEgdBl55MI/y0hhtof0z8mPbHzE9ofyz+lPbHizNof2yaSftj0Gza
H6Pn0P6Ynkz7Y24KzceyVNofa9Nof/SdS/MxbB7tjwlG2h/Z+TQfixbQ9l9c
SNvf+JkcX4/f2+jC+2cJXMxBdfvQWhXev7qozzmQ+t6wqhiNgnVpSzioU85b
6qtgc85SDpKWnOugYl5TsKN0GfEvJkLB2prlHPRtGtHZiwEFsz4rOZhwafNU
l4T8267NkONv158vMbqPFayJN3GwZWvzBFeFUcFGE8vBtqULxquYJQq2FWZy
sGfRpCEqy3IFq6uyOCiLarjGOJC/m4NXyf46/61AlQbnh5gvOdixu1dJc0Uc
Ws/c1RycLXlnvYT/Ppu3Rs4P28add0nYH8u/kvn0pfmJC+cLzZ218vtUBc2S
1Autx+9rDp6jfBqK1hO+nvg/9k914gYOwkbHzm2RghVsyNzIwbA+KUdeSG0U
bC3eJOfHIJgq4XjE2M0ciH49uRaM9U2bOdik5FPGG51HUA7tj9G51Od16Xkc
ZJ18b5UH/rw5d4scf1bVm0k8cpRt5aDk0+leBGtrv+Hg9xt541phzPpuo/0x
bDvtjwnf0f7I7qD9seh72h8v7qT9sdHixjg+Bu6m/TF6D+2Pafk0H3MKaPtL
C2k+1hTRfPTZS/NRu4/mY/wPNB9N+2n7Cw/Q9lcdpO1vOETbH3CYtj/qR9r+
1CM0H7OP0vaX/iTrnY1Lu5D90Vcfo+33Pk7bH1pC2x9XStufUcbBB93fv9CC
/dFRUM7BpJiOCyWpp4K1lSfc+uVNBbP1JzmoCWm7WzKh/KM12mR9OKr7fBWD
4jm79RQHJ4r/PeTBTlKw/eQvHIwa/s14hkH5R3PvNAfLSyZs9HAgfWZsd5aD
xTULyj10SO/ZBv8q89sY4VCxOF9N/Y0Dy+kVS1W2eAUbvvhdju9sdEaLhPhp
3fcH4asJ5Rfm8jkOhi4K6iKZYhSsf3bebS/KLxZNJQfryrRfuaTBCq4bVSXj
izsMkvSWgnXzLnKw61CHXUTPmrfYOVj424fzmnG8c5y4xMHNzQGLGZyftXcv
0/7R9grtH4Ou0v4x5RrtH1l/0f6x9zrtH5f+pv3j6Q3aP4Jv0v4x6l+aH3Nv
0f6Rd5v2j3IH7R93qmn/8Kul+RF+h+ZH4l3a/sx7tP3FHG2/naftbxJo+4Oc
tP0x/6PtT79P25/7gLa//CFtf20dFf8svo9p/Rz2hLY/oV72twm7BzL4uZlt
oO0vauRgyN1DQ8hz7cUmuV5J+JslmG18KuezlN39Sf6zBz536w2cH6JfcJDc
o3OlJxOpYMuWZg7enWUJd0mIL3UnWjgoOurawrBJCtbddXEQOwSutCShfGdu
y/AwRPHvpNkKdgxS8ZA4VpUsBc9E65niwcNxr7GLVDpUL7FZnjz8c+qrlR7q
BWg9e1vxsOBU9+aW2yhfai558bBzU3iNhw3xzfi0NQ9L+vyxsCUJvc8W7M1D
AXtUUjGTFawe5cNDPcp3iE+Gub48fBBrjmWwPrPm+fEwa6BXfosUpWDmRFse
dlxL178wjVKw/k47Ht4+dyrNgxmD7PfrwEN60JpTzZivdeFqHtYMqtjmyYxF
9ie+woNfTJ9FHhibMzvycBbpwzBkf3EnHnrN/aCPJxOC7Ld35qFCveCWhPMp
29SFh0Ck71C+swd15Sl/jOlGYWN6dwrbcntQWF3uT2FDbQCFrb5BFGbCgyms
T9BQ2ML2pHBd0WsU1l3sRWFzY28KOwJfp7A2ui+F2bQ3KGzP6UfbX9aftr9m
AG2/z0Da/rAQ2v74UNp+k5a2vyiMf7m+0VeF0/Y3DKLtDxhC2x/1Fv9yvjOn
DuVBQHzGev7EMB4+UvoBTDcFG+4M52HVLf+RDNNbwVa/ETyp75H+ZAa9w0No
gPcfHizKX/rEd3nIfNS2x3PTBAVbMt+T3/9o+XZXRKyC64ojeJjgdfMJ0YM6
u46HkvTbe1wRiJ/mJuDhj9rkZyoN4qcjaCQPsjq95aFDfNHGRPHQJz6gqhnn
KzY9moe4Q6/t8ST5MTeGhw9PWr5sxXygYE35KB6utvqwSYXjg7F2NA9Vib6j
X0hvK9jmO4YnehrVR+rwsTLfJ74dL0mo/jEkjOOh26rxTxkcf6zsePo8ij/g
Kf14cQIPN1+ZXUzqV0ujnj6PwI/o84ieSPtj2iTaH3NiaX8sm0z7Y00c7Y8+
CTzJt7i/EpZI+2P8FNofTVNpfyyaRvtj1XTaHxuSaPsDP6b5GPUJ7Y+pn9L2
Z8+g7S+dSdtfPYu233sObb82WT6f0+eXkPqSjUvh4a+0u32IfrJnpPJQzI8O
kSJQvawpTONxvZO0WMHGynQ5nj4rbSutWaVgW/1cHjruHHHK1WG1gtUBRh6a
i1e3uJq+VLBh5HweVua+0pXRo/rHmrKAh4DzZaLKNlfBTPZCHvffdFMUrC/5
jAf/97OMXgyKv2ztZ+71o36d3XexHN9R/YX0oCb8c4p/xoQlPGjfWHKI1Cc2
dikPe1EBhOoXdfEy+nwuLudJvY31feMK+nyCMujziTbR/pnG0ueTk0m9T1eW
5V4fWo+55gv6fHy+pM8nbDXtn/FraP80fUXHy6K1tH9WraP9s+Fr2j8DN9D2
R22k/TN1E21/jpm2v3Qz7Z/V2bT93rnufIz2R6fNo/0zbgttf8ZW2v7Cb2j7
K7+l7a/fRtsf8B1t/8gdtP0p39P2Z++k4o2hxMLD5a6RVS9wvWF17OIhSdvJ
QvQY472HhzcGrP7BE+drfWi+O57j+nZyAQ9O9D7cn15ZyJN+UIDyXFdQxMOt
zYdvNEv+CjZfKObBErzrFOlPOJ7sda/vNQVr/X/g4cG4uFkMg/QEG7mfJ/U8
qtftyQd4MGsPf0/6UZrNB3l4ZWhRtopB+sZ4/BAP59ZViwz7IXo++DAPM88a
FzGWT9DzKT/yUP3NzAkeWM/Zso7w8K7Sn7qI9Jl631EeJhXPDXHdRv0Iw6Wf
ZL1jOGdTOVC/zfr0GA9p9q23XIfQc0ZznAfd6Fe1KtKPG1XCg2fW8GXNplS0
P3NLeXj80+wtrVhUX9XllfEwkD8R1opBfNedKCd8senR/tw5Ieulo+O3SNJ4
tD9+FTyMemfwGknC/fFBNjle9Q45JknvoP1JPMXDWtS/RHrLnvkLD3ln23/m
wv0Ozd7TPBx4qf9hP8PDpiVz2rvjQ9NZHuJRww/VV+rg32h+xPzuxjg+pP9B
8yPvHM2P8vM8TDy2J4d83lJ7geaHbxX/8jxDF36R5keCneYHe4nmR/Flmh8X
/6T50XiF5kfQNbe/o79njP6L5kfadZofuX/T9pfdoONDzT+0/b7/8i/3m/Vh
t+j4EH+btt/koPNXUTUPy06NY1uT/k9VDU/qWdz/aah1fx6djzbwLg8tjzt1
a8Z8YKPuuc8T8yOV46F/r7UlkjRCwZocnif9VsQXY6nAQ26X01dVzEgF26pF
HqYPU2d7seMUrPb5n+xvS5arPVjkf+bE+zw03u/9WnME6l87Mh/I8S3VWSTh
+ki79yEP+uDMiGasz1h7HU/6gci/7U2PeGj36geXm03T0HqCn/C4X25C/T1j
TD0PoPCHRf1vW3oDD+MnxNeoLOi5Oq9Rzqf7phY3V8xTsKG8iYesfZd+UNUh
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
Q5wwTf1WtSd+v+3WW058H0aOH/8H15rRNw==
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1: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
/wDLVl3U
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1:eJxVW3d8U9XfvmmBLkZYMjoIU4a0admiNt8uEAQj0AlIBAQ6CQ6G0OYWUJZC
WgqoqESEtgwhOOkA4sCfjLYBFAcKaQvcEZEAHazmvveec+5rDv/weT43yT3P
Oc93n/afv3TGq34Mwxz2Zxjlf/mf+cDjm8D898/hbLsJ+1/IWuLPDDHIWHvf
exMu9YqrfSQNVLCpH8P5ft6epKEwk+dHYeMOfwrbqttR2NPYnoNbGz+57cd4
YmVsCAngoOlt6z2vdFvB1phAGTf378EwA5T3u9KDOLjw2wYjw+gUrC8M5iBr
bfkjholRMFsewsHzPTIut0kTFGy/KOP13Rb96ZUSFcw87MjBy7Z9Dj92moKN
/TtzEGWcYdKwLynYNrkLB1vTtryoYZIV7Fmq5eCZRbYYr2Wqgg27uqrrR79n
PdmNg2M//fFGO+Y5tL4b3TkQQ/pzbVI/tL5OPTlYdzU0nmHGofWNfoKDV0+b
32SYQQp2zu6l8pUUvrp1vdXfR/thPtiHg+yz87KVdyvnc6EvB2kzvRn++Ln2
QSi1nyZdOH0+kyI4eK7h0wmP8X4yS/vR57NTR5/Pif70+VwfQGFDx0EUto4a
TGFXxhAK69c+SWH2wFAKO53DKKy7P5zC5n5PUdiRNJLC2rxImv+OKJp/tZ7W
5/Vomn/IKJp/zGiaf/oYmn/hWJp/+Tiaf914mn/rBA54pAd0vmzERJp/4jM0
/9xnaf4lz9H8q2Jp/o0GDhZPa5j/CJ+vKTiOA92xQ/4SxvboeA64c4sy/bB+
mPQEDq4WHfuT6MHIJnKwBH0frc9WlsTB4Ypb7xJ70z2YROyFGa9gs+55Dk7X
HFjIMEkKdkyaIttHTMpuyfKigrVLp8p8l8b192OnK9i08wV5fd1Nad7YdAXb
T0yT7aXHmVQ/1ojWc2M6Bx9efDjbj52pYGNHIwd7582ObbNMVrBt1EscNCv2
YUlQsCdjBge9mq729mNBwYa1MzmYMH/kc+3x+qwHZnGwcffMMwwzUcEuZzIH
J1l/SfUX91M4+N/HF797SM6jXxoHZ/saz0pSd+W5MymdOi9dXgYHSWGpP2uI
Pe6YrWJsj9VzOOi24hUt+bz2+lzKfk0h82g9xphoPWa8QuuxcD6tx/IFtB7r
FtJ6bH2V1mPEYlqPiUtoPeZm0vZYkkXrsSqb1mNjDq3H4Dxaj9FLaT2mm2l7
ZJfR/Mteo/nXvU7zb3lDPb8eBhnbwpdz8G/56iMME6hgT8IKDkK+H7KGnKch
Z6V8XrN/nazBn7duX6X+3gAFuyrfouKHvmE1B0VDvzr8SML+OCifg8HPrVjb
JukV7NQXcHAN2Qd6rkuzcPDlTr+LXgnpz2xhOSjjJ0dKFuT/HaWFHFyfLpja
sD61tWs5qJj5dJokIf1a+63n4NHybl29FhRvXElvk89LcWg9ee9w0PGtpR01
JD7s2MDB5GdGb5Bw/HBWb+Sg/uasGIaJROu5vokDk9HzsiQNQ+sJ2cLBsg27
7pB44oh5l4NPj3b5lGF6o/VkvMfB8KkLsjRMmIJNhVs5GHvj6BgGx3d7+Tb1
/eg547RycPCwZv9jrGdjaxEHI/kT0e2wnm0R2yl78CSWcHDK5jrhlbqg88jd
ocY/HL9LdtJ6rNrFkXwCPdc3vk/rMfhDWo/Ru2k9pn9E65H9mPo9R9kntB7r
9tB6bLHRegzfS+sx8TNajzn7aHvcvp+2x8pS2h4bymh7DDpA89cfpO0x7RDN
33KY5l/6Oc2/9gjNv/kobY9hx2j+CV/Q/LO/lPX10acP1fhQ/BXNv/Jrmn/9
NzT/wOMcnPvPX3qiKjiIu/1ef9UeUyvlfGvIpS+IPq0FVRxo67otbMcg+3Lt
r+ZgG8qvxihYX3OCg0pkL88omG06qcYDA3pudsj53tHP93ilWPR813fqetBz
58nvOcj55m6xZEFYd/MHDn5t91Krhn1eweZOpzmYdPh0GcNMUrBj9E8c1GQE
T34kPa1g7Zz/cfB62Rt2rzRKwaZ1P6v5GbI3+8Ez8u9363VFkp5UMHPxLAe3
f07L9Uq9FGx8cI6DGTt/+sUP+yebrka2T+25ROL/PZNqOcj/bvnzZL8NS+uo
+GDd6aT1ceICrY8bF2l9dPyFsi/nqF9pfcy+TOtj7W+0Pg78Tuvjwh+0Pu7/
yYHw3+/b+/1F62PS37Q+8q7S+thxjbaPahdtH9frafsIaaT5x1yn+WfcoPkX
3qTto5yj+Tt5mn+rQPOPcNP8k/6h+efeovbXXvIvB1WN5eNIfs5U31Y/j/yr
sdHDwcMv0j8k/tcWfJeDkv3RX5P45Ym+R+X7hvQmDj7eO7DiMa5PrGyzak/Y
PspaOHhN0aMF5Tf6ulYORnfafFPDoM+zLfflfEv8ZASJZ87wh+p6UP2jS3wk
v7/nD79qmGi0np2POdg04vtySQpF6znRxkG14fnC9ljfhhte9ftD0Xo6Mjx0
HVdWrGHi0HpGaXjiX5F96Gf78UQfaH3sWn8eFnUaeoOs33mgHQ93vl68sx2O
Z7oL7Xl419Oia8cgezPf78DjfA7HV0e/QB6+iMz7TIP9g3ZSEA/rk+zL2iS0
flNeMA+bUD6A/IV9RwgPY/6LX8yJjjzUXVsfR/yL8XonnvBB/sIW0oUn/mM0
4h+j5Ul9h/gaMrryEILiH/q+tbAbDzvG2EokbN+u8u486IeuPEr8nd7Zgyf6
wPlja0+e0mNELwrrknpT2Jzbh8KOkr4U1laHUtjUGEZhe3AEhZmYfhQ2puso
bGP7U9hTNoDChrqBFLa2DKKwK3wIhfWJT1KYzRlK898+jOZfNZzm3zCC5h80
kuYfHUnzT4ui+Vv0NP+yaBUjf2qsjaHOx9Y8iodHcT+vIv7XEzaG5p8wluaf
PU7VN87nT4ynsOn6BB4m7uWqiH3bQybKekyGFDV/GvUMDx1Gnikl2JjxLA8P
svYO1zDDFWwrfI6HoPdMjQ+lsQr2lMfy0CPAefsRjn8Gp0HVI4pn1lbgwRzr
KtQw8Qp2RcTzYNjw4K4fg+KbPimBh/abbv1L+hdsbqL8/hPj3mFwfeUsSeKh
+56J33klVK/pqifxcHn87q0Mtm9z42QecsRnhnulEQp2BE+RP5+6/iUS77Qx
U3mAef3iSH5tSn+BB1PghNuS1B/xZ6fxvvUSUz5d3X+UDxrrXuR961Nbi5HW
Y/gMHuo7RzWSfNKQOJM+j5xZvG+/w7U9mdZjVQrv66/ZhlTqvJxB6ernUXzW
RWeo9ozWZ06bTX3fYZlD67Fsrsof13O1L9N6bJ5H6zH8FdoeE+bT9pi9gPft
d3mKF9J6rHyVh6LjA959SPLn+kW0PQYu4X3rI70+k4c/flk167E0WMFsahZP
4gnyX86CbB42+/OtbRLqT+lKc1SM6nNzTS4PBcmRs7wWVJ87mvJ4iGo98xLj
ekXB2jAzDx/+s6dMw2Qq2BS/jIcRTxefk669qmB71ms8PPy6+ZJkQZ9nil+X
17c4KMaPSVWwseINokesN7ZRxol/fTSlA44/zuDlqr9F69fFrFDjD+JnTl/J
Q+/10+7LS0HrY1fxEInqEXSe2vK3eIi4cG8ueW6qW81Dcsvcro+lALS+ljX0
+UQUyL+n9A9w/W5MtNDnk8Py8OmLe0eq+dv2QvU8kJ4MVWv///PK960N6+jz
CXpbjVdoPfrod2h/mbaBh5uoH4N+32nZSJ23rmwT7S9rN/O+/VBH8xbeNz/T
hr9H+8uErbQ+s7fR/LdbaX1WFtH864tp+wwsofWp30HbZ+pOmn/BLto+S9+n
+dd8QMeLpg/peBH2EU/qT8TPHP8xHS+yPqHts3gPzb/CRsUDu+tTmn/gZzyc
nts7QcL6MEbt46Hw5HPr1fw9ZT/1fU9+KU/qFeTPDfvLeJL/o+9bz5fzpN4f
qGDXvQM8yb/w+YceUn8P6Z2NO8xD2LEn9vgxyP87Mz/nYdBbJ0MYnK/pio7w
cHxxmZ7B+Yj5+FEe7v85airpd+lGH+Nh5cLDYyWcP5pnf8FDtuK/cX/BsfZL
Od4dnFP+WML9uINf8fDdyg6d2iT03HThax7OnhyxVsLYfv8b+f3VzwZqHDMM
6ACOy/akrM8xF+3PpArZX2a1HpK/ivYnr5KHY0q+xr6sYM+OKpUv8ieGE9U8
HPnj7FRvLOrnWa+f4OGU9rWrkoTjV8gpHjxo/1D+px/l4MGyaaX7sYTyOzbj
O5708xA/Z+H36v4NQPwP/ED7b+ePVPxxtJ7mwYb6H8g+tf3+J/snFP9x/E76
mYc4y2OG5HP23DM8/HUBtpH8gNlxlraP6nM8/Du580SiB1vjeer8PcG1tH3E
1NH2ke6k7YO9QNtH+UXaPuou0fbR8gttHxGXaf+Q+Jsan3A/Mud32j5K/qDt
o+pP2j80XKHtI/hvmn/0VcpebGnXKH/osbho/mX1NP/aBioeu5obed95hz78
hvocnSebcJOHnSgeoHrFmc3xMO1BdidSP+m28zwcCtr7rz+uB8yVgnz+v11+
UcL9OUe9KJ//D2tWaRxpCtYG/SPHnzuF4ZIF6dOacUt+vi2mwY/kU4X/8tBy
a9CAx7i/oD9wW10/ipes06OuDz13tt7h4becG4PVfkO/ezx0mfJ+5iNij0lN
cjwr+vEvCdcbjtxmHiYr/QcWvU+7o0WNh2i9pupWntRjqF9tb7wvx9cF8eMe
4XjNhDzkQdqVfYH0Q4wxj4j+LCifs6U/lr8/cMHXD/DnPWwbDx1RfxTVa4Zy
r7w/ox7tUvsxdRLv2z90tTAChMzYMZvke/oIPwHKvvLuJPUVm+gvkP3A86qc
dgKZH+D+eEl7wTffM1d1oLCjIUCg9BgcJPievyk6mHpuTwuhMMN2pLCxrBOF
bbWdKexp7kJhQ3hXClsTuglweJjlc5LPubK7U8/123tQmK3sSWFn/RMU1gX1
prBZ30fwna84UvvS/C2hFDaVhlHrsdeEq88RZpojaP5hOpp/fH/B1748WQME
ki8jf2AoHihA49ZVPdV+U8UgAbqh/B7Xt67BAizMr2hP6mF94JMCOFA/F9kf
GzVUgE5IH0gvTOEwAS4sbomScL1gLB8u/172nWEMg/RuqxshQC6qJ5CePS1P
kfXheY4hIlKAoSPeOeSP44U1MYrwsaH80ZWjF3B+ugdhfUm0AEtDdookHrFV
MQLp1+P6pmGUAL2GDrMzeJ6rCx4jwOIdH1x8KKF5rTl6rADlSr9eelbBjrRx
8nq71NSTfoWWHS9AaULucklC/RNT2QSZ73/9eHvt0wKxJ9TfZFomCmQegOo1
Y/izAunXIPu0JTwnwGzn6gWBON57smMF0v8ZgPhvN6jnh/yXtRKo83TVx9F6
DEoQqPmhPpHWY2oSpRedZRKtx9LJgm995ah5ntZj8xRaj2Ev0PYYP422x+zp
tB6LX6T1WGGk7dH1Em2PgTNpe4yaJfjWV66UZJp/QYoA21Yu6UziPbs/leZ/
Pk3wrQ91Tek0/9DZFHbEzRFI/oHimTZrruCbL5iKXhZ846n9+Dxyvngew7hM
AqlXkH0YA+YLkLH9+O9enE/YIhcIEPB3j0SvNFLBnuSFAmiseddIfW0ue1Ug
9TiyD0ftIgHGKP09dgpaT8ti+fNLSiJJfWYKzxRgb9ecOZKE6nt7QpYAy5T1
nMpA68nJFvD8xoHyMeP2HAFmZlimMsxstJ7KXAG6vr3zTUlC9uOpzxNgQN70
wf6GWQo2BJnl989edUaKRfHSql8mwBbF/ixoPa7U1+T3j+haTuavesvrAvT+
MWA5iZds6RvU5501bwrAKfNfHN90zcvl/cpPbSfh/TCHrRQgos+hGpK/OuJX
CdS8Kvstwbd+NRWvFuD5OV2TiP7tFWsE3/kFU58vUPVcoIXWYxRL6zGlkNZj
wVqBum+yfx1tj+fX03psepuOD6EbZP+RM+lJol9n3EY6PmRtEmDlj30OkvWa
izbTejy+RfCdt2ld79L2GLCVtsfIbbQ9plgF0k/A/POLaP77itX4gp57zm0X
fOtrw70Syn9Y++6k+cMumn/m+4Jv/staP6Dt8dsPBXKfAD3XXdtNxXtzh49p
/iM/EeBo5oQRJF/QJu8RSP2M/K1pjY3m/9mnAgy83DCTUe8nyfjKB0fOk3rJ
1O8zAS4PivyG6M2etE+236r6jSQfY/L2C5De69sLJF4Zd5QK8MS7U8R2DIof
tuoyAWbcFcP88f0FT2M5iR+xc9B+hRyU7e+9uoVSLKqHrDGHBIha/1GrFLtQ
wa70w/J5XLrzvsaE41fh53K8OPtCZht+zpYfEWBOzdONjyRkv866owLolftH
BmR/ula7bD8T72/yx/miOeILAVa/3b7VH9d/jsQvib2zKP/T5n4lx++5fyX5
M68j/iVfy/5LmcdpVyP+Vd8IMP7eoQmM6S3Ev/Fb2V6Udr70GuIfXCHA9b57
zngtSxD/6EpZHy+9cJVh0Ho9aVUCTHePLW+T5iH+bLWA73foED9r2QlZX3JB
6ccuRvxrTwqkf4n6Q/qWU3I+MbzXcKkf6h+x4d8JeH5+Cn3emfC9HI/v/1An
zVuA+Of8IMerL4J3axyLEP/tP8rnGdESpzEg/+aoPE35N23DTwLMKs+L9GL/
ZQr6WYD8gNhlDM7/7fozcv6D5vMpiH/aWYqP0XJOgHCl3tVh/qXn5Xgw9uAl
jQOt11NTI39/dEJP71G0X4bmWgESZi5/qPGsRPzDnAI8WFfIebcVIv7xFwQI
LVw5V5q0EfHPvijA93/2nqhxvIP4F1+S/fvoKbu8t1nEv+IXmd+Kgpf8dOi8
dPW/CtDhs+KnNVoz4h/4mwBJaH6J/Lcj6nc5fj3e265NQny0qX/I/iP3h6GB
LKr3TQV/CmBM6ZgawKJ8y77/igB/17/6DLkPw9T8JeB5KNYTG3FVgHmHe5RJ
eL7jTLwmwPARoVq1X5rrUv0bsjdzSb3qf3F+X9VAxUttY6Pg2383Bd+g7Tf6
puoPcb84nRPAveQ7fXsyT2N5AcY2X2pg8O/ZygSiZ+K/akV5vebxFQQbWtwq
vwHoPMJv0f4r4V+B1Fu4X5pzm/bf2z20/6q8I8DW8fHNxF/rGu7S+URQk0Du
Q+B6W98sv78obDnxn9q0Ftp/W1pp/qX3af9d+0CAF/7YOp30n4zND2n/HfaY
jl/xbXT8yvbS+VSxJPje93JVMCLlv+s1om+9wAb6i77+3xnVTiT9KXz+qe2p
75sLOogk3qDnjv0B1HNtTaAIPz478W11XtAURD23h4aIvvpg4jtSz41ZnShs
K+osQiDKp1A+4DneRST5LHq/waUVYdp/+2cN6CZCA3qO9OSK7C7C5PXuFi+e
V+hTeoiw4t13OFLPsvk9Rdh5uvMb5Llz3xMi8V+o36c730uEklv8IAb368z3
eougPz9zMYknnoS+Iix/3CvQj/S/ckJFaET3dXA+tT1MhIdzck97+6F44aoM
J/zY+Wg9DREi5N/6YLDGgJ6zQToR4p/Nb+e9hvyvU99fhBcvFM3xStloPWkD
RBi+ve+fDIv8k9kyUMT9SQN67igdJMLUfpU2bxTyH9rawSK8WjTkqsaE/Jup
eYhI6jXcvw8bKsIH6L4F9o8Jw0TiH1A+Z8weLvrep7MVjxBBgwjg+q7iKRGO
9F9b1Yb3z1A/Ut5f1J9E/QRrYJQIrgKHvz/WgytKL8J5lN/h/k9qtOhrP2xB
jAgzn+gaoOZT+0dRetDVjKb12DRGJPNp3P8LHUfrMX48hU1ZE2g9Fj0t+vb7
mYqJtB5dz9B6DHiOwp7IWAobUgwUtuYDhV374mh7PB8v+vZL2HsJ1HNn3yQR
5jkKLQy2Z13cJNE3XzJnTqb2z2F9XoSvhiw7ps4Hjk8Rif/G85FrU0Uyj0Pf
t3eYJus7mf9X5R85XYRNE28mk/cZk1+Uz3PQhnCCbWuMIrlvhu/jffaSCOVP
ffsayZ8N52aIuD7B9ZD17kyR1EOofnL1SRbh9dsjdF487zFlp4hQ9suVZFIv
2YtTRch++s4WDam3K9Nk/SZfmyXh/rCxPl2ETh++cI7c17EFzhZh3X3HVgnf
R/BEzRHhy5N/rSX9O0PqXJH0G9C81Frwsgj3xn2q1RhQ/8C1fx7xhxbU/9bX
mGQ9d+rZ+PgUsge26RWRxF+U7zhDF4i4HpyH8hdd/EKCLXnoPLJeFSE4afCb
fgzCjqJFIs5nDTkK1lYsFuG0pumR9xSep7mWyDj0g0neayj/sQdkiSCd+3qJ
xoDmZ0xUNvn9WLQeY0qOSPoZKB+15eeKMBDVc/i++r48Ec+7LYiv4fxS4i9w
P916zyzC72heiPbL1fc1eb/zJg4k/Qh93Osi7lfieMpmviFC58phm8k8zWl9
U4QP52dOVP3j8eUiHF42NlyD/an52goRzm2uF0n+7uiwSoTePap/I/NibeRb
IrkviO8rJ69W14f6T/Y1a0QIR/M8fP778kXfet14roCKH7a7FhGME4ZsIfWG
p0+hSO6fIX0ZYK3qz9H83bpknQgZUzWZEr5f4tq2XiT31xBf/bdvi8Bv6+ci
/SD26juyfQ0LP0zmF872G0V4snVij/Ys6i/pRm4SybziBcR/1mYRrny3Md/P
geYfjtVbVH+K8lftZ+/K/lepv0zIv5vOvifC3vUffCPtmY/439kq+ua/TB+r
/P2Vq7V+DPLvRkORCCfX7RnP2FA+ylQXy/7yy4AMjQP5e2PjdhF67U4J1uhQ
vm8L3iHCwogH6zTGN9H+RO+U48Woab9761ag/UnfJULt5vJN3ij0e1b2fREO
Kfk8nve6yj6Q9ydoVC6Z7+rrPhRhyvznKx5ZcD+uZbe8vmLdHA2D9OkM/1jE
8x8J6U+X+In8e/9UDbiP503mnD3yfiVOeu0Bvo/g2G4TSb2F7tNqqz4VyTwN
9+Ma9sr+J6FuhYbcxwvaJ5L7qygeM9H7RXL/CvXrjGmlIunPIb3ZLGWyvrIN
wyQpCvEvLRfh9njxPVUftQdUf4vzh+aDIiyoyV1M5suusMOq/0BYn/C5CH91
XVxO9MtmH5H9T97mAer98eKj8nr/q/d1lXbRd75hrj8m+t4HcwR+KcLmKv1G
4i+1+q9U+0D9JVPq16r+Uf5jL/hGJH//gtbDlH77//EC8a85Lr9/fZNVnVc1
VVDr8YRWieQ+Na7/46up91uzTqj2gOKFq+gklV/pK06JkN49r5S8j3U5RHLf
DdmrM+B7lS/y97qoH9R8AK3fnPKjSO5foXrCkX9aPW9832T/T6q9DUT8z/9P
9nfvDrrpxfc17fd+luMXigeon8uEnhXBOanPMg2D+lnGuHPyeSv3E/qh/MaW
eV6Ed4TVnTTYXjzWGhG6X41Yz+D6zdxQK8enkCczvbEIO4Kc8v4OuPLAuw3Z
izb6grwf9oMve7ctQ+tJuyiCriknpS0W2afdckmEQUo/AvffmLJfRFzfn8L3
H2p/FeFGwJG77XB9b2u+LPsv6+76Djhf9IT9Lvv314f3YXA9b0j4Q9bT2SNZ
pD9mzf5TJP12/PcMxVdE0o9G/Q595V+ynh5UdiT+jK3/W4RhyJ+i/NQZeE0k
f9+A4qtO7xLJ/BjFT3NqvUj6n8i+HAUNlL/UljYSftjeTDXXRXhzxcedHkjo
7y3sTTdESEH3LVA/nAnjZPt8M6KnhPuFxnhehD3/zdtsWYIIi0a239eGv+8p
ElX9on6iocKtYrR+q+sfkcwDUf/UFfCvGr8w/6jbKj+kFzbFI/r26535d+T3
IXtDfHT778r6/y+emM/fE33vizjuNVH2ow1tUf0H8iemuFZ1fTheZd6X9b76
iwB1PlL0gLJX4/GHIrlfhezZdu2R6DvP9HRoE2H3ms4bSD1uiPSKMB09x/lK
siTnp60/aRkDyk9caxg3vh9pQfmLfp/GDYvRfqL8gT3n54bbySO6eyWcr9z1
d0MD8zBfkpA+dX3bu/G8Mxb1T8zQQcaXLJcf70H1h2NJgBs+33JlCeNC8UZr
DXQTPaxC/L8NcuO/Z7MXIP5Xg92Qd6W1XFqKsCswxA1btl6/K5Whfohe39EN
7MvHX9esXIfWl9rJDTPWZfb2Wtag9RV0dsPx4vBQjQvZm660ixs+mjX6sncp
sldzjdYNJ8bYk/10eH1NXd3AV+44y+C/z9OGdXeT/AVhU3wPN6T/Ou5XKRb3
y7N6uuG3klOXyX4yxU+4YaCpj4PMi4wVvdyw6Jj/xyS+21y95fXsqJjF4Hjk
CejrhrInZs+QcLwyRIW6YaLy905Y79aUMDes0M/fQ87PlR/uhlm9mRfJ7+n3
R7hJ/wFh9nw/N/QXLg1/iOfRzns6N6xdvqGHP/57Kl3oADf5ez88T44b6Cb9
LjRfcmQOcpP+LdKftmiwG/yUfhLO90zHh8jv33qmwSuhz9uvPenG8zRsj0zA
MDfRL7JnY+RwN5lvIP9gSx7hJvk9+n3PmqfccPrWOwOJng37RrqhY/BVN4mn
1nORbvL3I8i+XHej3MS/4/sdfaPd2B+Q+2kQ44bpMDCf+CvnklHUfuqso904
v2LQfpq/HeMm8x/0PsfVsW4SL3oZ/g8gwLU6
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.0852576*^9, 0}, 
     PlotRange -> {{3.0852576*^9, 3.6526464*^9}, {0, 3159.0027}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.0852576*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"CDC Case Counts by Region\"", TraditionalForm], 
     PlotRange -> {{3.0852576*^9, 3.6526464*^9}, {0, 3159.0027}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"HHS Region 1\"", "\"HHS Region 2\"", "\"HHS Region 3\"", 
       "\"HHS Region 4\"", "\"HHS Region 5\"", "\"HHS Region 6\"", 
       "\"HHS Region 7\"", "\"HHS Region 8\"", "\"HHS Region 9\"", 
       "\"HHS Region 10\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.697896647042575*^9, 3.697900112641252*^9, 
  3.697900203769753*^9, 3.697909933430707*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "fdata", ",", "interpolation", ",", "minsep"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"i_", ",", "j_", ",", "s_"}], "]"}], ":=", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"t", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"1", ",", 
            RowBox[{"1", "+", 
             RowBox[{"Abs", "[", "s", "]"}]}]}], "]"}]}], 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"byregion", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"byregion", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
            RowBox[{"Abs", "[", "s", "]"}]}]}], "]"}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"ibyregion", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"t", "-", "s"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"ibyregion", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "t", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "2"]}]}], 
      "\[IndentingNewLine]", ";", "\[IndentingNewLine]", 
      RowBox[{"fdata", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", 
           RowBox[{"f", "[", 
            RowBox[{"i", ",", "j", ",", "s"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", 
           RowBox[{"-", "25"}], ",", "25"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interpolation", "=", 
       RowBox[{"Interpolation", "[", "fdata", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minsep", "=", 
       RowBox[{"NMinimize", "[", 
        RowBox[{
         RowBox[{"interpolation", "[", "x", "]"}], ",", 
         RowBox[{"{", "x", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"GeoListPlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"hhspolys", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"hhspolys", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"GeoRange", "\[Rule]", "\"\<Country\>\""}], ",", 
             RowBox[{"GeoBackground", "\[Rule]", 
              RowBox[{"GeoStyling", "[", "\"\<ReliefMap\>\"", "]"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"\"\<HHS Region: \>\"", "<>", 
                  RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}]}], ")"}]}]}], "]"}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"DateListPlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"byregion", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"byregion", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Opacity", "[", ".8", "]"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"\"\<HHS Region: \>\"", "<>", 
                  RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}]}], ")"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"interpolation", "[", "s", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", 
               RowBox[{"-", "25"}], ",", "25"}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Text", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"x", "/.", 
                 RowBox[{"minsep", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "<=", "0"}], ",", 
              RowBox[{"\"\<Region \>\"", "<>", 
               RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\< was hit \>\"",
                "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"(", 
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "x"}], "/.", 
                    RowBox[{"minsep", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", ".01"}], "]"}], 
                 ")"}], "]"}], "<>", " ", "\"\< weeks after Region \>\"", "<>", 
               RowBox[{"ToString", "[", "j", "]"}]}], ",", 
              RowBox[{"\"\<Region \>\"", "<>", 
               RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\< was hit \>\"",
                "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"(", 
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{"x", "/.", 
                    RowBox[{"minsep", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", ".01"}], "]"}], 
                 ")"}], "]"}], "<>", " ", "\"\< weeks before Region \>\"", "<>", 
               RowBox[{"ToString", "[", "j", "]"}]}]}], "]"}], "]"}], "}"}]}],
          "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"ItemSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"Alignment", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Left", ",", "Right"}], "}"}]}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "\"\<Region 1\>\""}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"j", ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"ControlType", "->", "SetterBar"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "4", ",", "\"\<Region 2\>\""}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"k", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.697901382374589*^9, 3.69790145309728*^9}, {
   3.697901516418388*^9, 3.6979015645065527`*^9}, 3.697901745864455*^9, {
   3.697901814262218*^9, 3.697901819151947*^9}, {3.697901867293137*^9, 
   3.697901908770124*^9}, {3.6979020174744864`*^9, 3.697902043648821*^9}, {
   3.697902096101668*^9, 3.6979021298632793`*^9}, {3.697908581716731*^9, 
   3.6979085833570557`*^9}, {3.697908628168696*^9, 3.697908695154277*^9}, {
   3.697908754374427*^9, 3.6979089654515953`*^9}, {3.697909088741207*^9, 
   3.697909165032269*^9}, {3.6979092290799723`*^9, 3.697909292553451*^9}, {
   3.6979100330201063`*^9, 3.697910034028318*^9}, {3.6979100747885017`*^9, 
   3.6979100938282337`*^9}, {3.697910133109153*^9, 3.697910135659733*^9}, {
   3.69791179347974*^9, 3.697911998025408*^9}, {3.697912030344219*^9, 
   3.697912074294064*^9}, {3.6979121167755957`*^9, 3.6979121393054657`*^9}, {
   3.69791368396793*^9, 3.6979138271588078`*^9}, {3.697913862067691*^9, 
   3.697913875875773*^9}, {3.697913922851183*^9, 3.697913941279076*^9}, {
   3.6979139732951593`*^9, 3.6979139767773647`*^9}, 3.697914041670247*^9, {
   3.697914234582374*^9, 3.69791424135159*^9}, {3.697914277797854*^9, 
   3.697914306043641*^9}, {3.697914388946096*^9, 3.6979144080341454`*^9}, {
   3.697914454301529*^9, 3.697914472226454*^9}, {3.69791451563408*^9, 
   3.697914520407707*^9}, {3.697918464238023*^9, 3.697918468637144*^9}, 
   3.6979197558595047`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 4, $CellContext`j$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 1, "Region 1"}, 
      Dynamic[
       Table[$CellContext`j$$, {$CellContext`j$$, 1, 10}]]}, {{
       Hold[$CellContext`j$$], 4, "Region 2"}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 
      10}}}, Typeset`size$$ = {709., {315.634033203125, 321.365966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`j$2241895$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 1, $CellContext`j$$ = 4}, 
      "ControllerVariables" :> {
        Hold[$CellContext`j$$, $CellContext`j$2241895$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`f$, $CellContext`fdata$, \
$CellContext`interpolation$, $CellContext`minsep$}, $CellContext`f$[
           Pattern[$CellContext`i, 
            Blank[]], 
           Pattern[$CellContext`j, 
            Blank[]], 
           Pattern[$CellContext`s, 
            Blank[]]] := Sum[(Part[
              Part[
               
               Part[$CellContext`ibyregion, $CellContext`i], $CellContext`t - \
$CellContext`s], 2] - Part[
             Part[
              Part[$CellContext`ibyregion, $CellContext`j], $CellContext`t], 
             2])^2, {$CellContext`t, 
            Max[1, 1 + Abs[$CellContext`s]], 
            Min[
             Length[
              Part[$CellContext`byregion, 1]], Length[
               Part[$CellContext`byregion, 1]] - 
             Abs[$CellContext`s]]}]; $CellContext`fdata$ = 
         Table[{$CellContext`s, 
            $CellContext`f$[$CellContext`i$$, $CellContext`j$$, \
$CellContext`s]}, {$CellContext`s, -25, 25}]; $CellContext`interpolation$ = 
         Interpolation[$CellContext`fdata$]; $CellContext`minsep$ = 
         NMinimize[
           $CellContext`interpolation$[$CellContext`x], {$CellContext`x}]; 
        Grid[{{
            GeoListPlot[{
              Part[$CellContext`hhspolys, $CellContext`i$$], 
              Part[$CellContext`hhspolys, $CellContext`j$$]}, GeoRange -> 
             "Country", GeoBackground -> GeoStyling["ReliefMap"], ImageSize -> 
             Small, PlotLegends -> Map[StringJoin["HHS Region: ", 
                ToString[#]]& , {$CellContext`i$$, $CellContext`j$$}]]}, {
            DateListPlot[{
              Part[$CellContext`byregion, $CellContext`i$$], 
              Part[$CellContext`byregion, $CellContext`j$$]}, PlotRange -> 
             All, PlotStyle -> Opacity[0.8], PlotLegends -> 
             Map[StringJoin["HHS Region: ", 
                ToString[#]]& , {$CellContext`i$$, $CellContext`j$$}], 
             ImageSize -> Large]}, {
            Plot[
             $CellContext`interpolation$[$CellContext`s], {$CellContext`s, \
-25, 25}, PlotRange -> All, ImageSize -> Small]}, {
            Text[
             If[ReplaceAll[$CellContext`x, 
                Part[$CellContext`minsep$, 2]] <= 0, 
              StringJoin["Region ", 
               ToString[$CellContext`i$$], " was hit ", 
               ToString[
                Round[
                 ReplaceAll[-$CellContext`x, 
                  Part[$CellContext`minsep$, 2]], 0.01]], 
               " weeks after Region ", 
               ToString[$CellContext`j$$]], 
              StringJoin["Region ", 
               ToString[$CellContext`i$$], " was hit ", 
               ToString[
                Round[
                 ReplaceAll[$CellContext`x, 
                  Part[$CellContext`minsep$, 2]], 0.01]], 
               " weeks before Region ", 
               ToString[$CellContext`j$$]]]]}}, ItemSize -> Full, 
          Alignment -> {Left, Right}, Spacings -> {0, 0}]], 
      "Specifications" :> {{{$CellContext`i$$, 1, "Region 1"}, 
         Dynamic[
          Table[$CellContext`j$$, {$CellContext`j$$, 1, 10}]], ControlType -> 
         SetterBar}, {{$CellContext`j$$, 4, "Region 2"}, {1, 2, 3, 4, 5, 6, 7,
          8, 9, 10}, ControlType -> SetterBar}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{754., {373., 379.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.697901394963252*^9, {3.6979014312735367`*^9, 3.697901460422223*^9}, {
   3.697901492401041*^9, 3.6979015655286627`*^9}, 3.697901746620201*^9, 
   3.697901842538827*^9, {3.6979018775434427`*^9, 3.697901913982896*^9}, {
   3.6979020265889597`*^9, 3.697902052056234*^9}, 3.697902135877555*^9, 
   3.697908586444839*^9, {3.697908637575966*^9, 3.697908673834206*^9}, {
   3.697908953660781*^9, 3.697908970506208*^9}, {3.697909104488658*^9, 
   3.697909117581231*^9}, {3.6979091524084053`*^9, 3.697909166970087*^9}, 
   3.697909294861079*^9, 3.697910041167427*^9, 3.6979100972546883`*^9, 
   3.6979101375597754`*^9, {3.69791207568116*^9, 3.697912145333919*^9}, 
   3.697913832173971*^9, 3.6979138790815496`*^9, {3.697913930252063*^9, 
   3.6979139426933317`*^9}, 3.6979139807688932`*^9, 3.6979140451400623`*^9, 
   3.697914242435287*^9, {3.697914295043844*^9, 3.6979143092269917`*^9}, 
   3.697914413827257*^9, 3.697914473710943*^9, 3.69791452222223*^9, 
   3.6979184697800817`*^9, 3.6979197637548733`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hhstimeseps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"s2", "/.", 
          RowBox[{
           RowBox[{"NMinimize", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Interpolation", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"s", ",", 
                   RowBox[{"f", "[", 
                    RowBox[{"i", ",", "j", ",", "s"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"s", ",", 
                   RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], "]"}], 
              "[", "s2", "]"}], ",", 
             RowBox[{"{", "s2", "}"}]}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", ".001"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hhstimeseps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<HHS \>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}]}], "}"}], ",", 
       RowBox[{"hhstimeseps", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hhstimeseps", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "\"\<X\>\"", "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\"\<HHS \>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], "]"}], "}"}],
      ",", "hhstimeseps"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6979101422679234`*^9, 3.6979101471289*^9}, {
  3.697917000522953*^9, 3.697917133965632*^9}, {3.6979175215752287`*^9, 
  3.697917524013687*^9}, {3.69791761665839*^9, 3.6979176309437923`*^9}, {
  3.697918270614217*^9, 3.697918276517212*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"hhstimeseps", ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"ItemStyle", "\[Rule]", "\"\<Text\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6979176962911053`*^9, 3.6979177326437693`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"X\"\>", "\<\"HHS 1\"\>", "\<\"HHS 2\"\>", "\<\"HHS 3\"\>", "\<\"HHS \
4\"\>", "\<\"HHS 5\"\>", "\<\"HHS 6\"\>", "\<\"HHS 7\"\>", "\<\"HHS 8\"\>", "\
\<\"HHS 9\"\>", "\<\"HHS 10\"\>"},
    {"\<\"HHS 1\"\>", "0.`", "0.058`", "1.358`", "3.6470000000000002`", 
     "2.386`", "3.42`", "2.649`", "2.741`", "0.509`", "1.962`"},
    {"\<\"HHS 2\"\>", 
     RowBox[{"-", "0.058`"}], "0.`", "0.806`", "2.549`", "1.92`", "2.774`", 
     "2.195`", "2.327`", 
     RowBox[{"-", "0.431`"}], "1.549`"},
    {"\<\"HHS 3\"\>", 
     RowBox[{"-", "1.358`"}], 
     RowBox[{"-", "0.806`"}], "0.`", "1.23`", "0.737`", "2.`", "1.`", 
     "0.977`", 
     RowBox[{"-", "1.1380000000000001`"}], 
     RowBox[{"-", "0.136`"}]},
    {"\<\"HHS 4\"\>", 
     RowBox[{"-", "3.646`"}], 
     RowBox[{"-", "2.549`"}], 
     RowBox[{"-", "1.23`"}], "0.`", "0.055`", "0.406`", 
     RowBox[{"-", "0.192`"}], 
     RowBox[{"-", "0.917`"}], 
     RowBox[{"-", "3.495`"}], 
     RowBox[{"-", "2.248`"}]},
    {"\<\"HHS 5\"\>", 
     RowBox[{"-", "2.386`"}], 
     RowBox[{"-", "1.92`"}], 
     RowBox[{"-", "0.737`"}], 
     RowBox[{"-", "0.055`"}], "0.`", "0.9490000000000001`", "0.292`", 
     "0.364`", 
     RowBox[{"-", "3.6910000000000003`"}], 
     RowBox[{"-", "0.883`"}]},
    {"\<\"HHS 6\"\>", 
     RowBox[{"-", "3.42`"}], 
     RowBox[{"-", "2.774`"}], 
     RowBox[{"-", "2.`"}], 
     RowBox[{"-", "0.405`"}], 
     RowBox[{"-", "0.9490000000000001`"}], "0.`", 
     RowBox[{"-", "0.712`"}], 
     RowBox[{"-", "1.04`"}], 
     RowBox[{"-", "3.`"}], 
     RowBox[{"-", "1.714`"}]},
    {"\<\"HHS 7\"\>", 
     RowBox[{"-", "2.649`"}], 
     RowBox[{"-", "2.195`"}], 
     RowBox[{"-", "1.`"}], "0.193`", 
     RowBox[{"-", "0.291`"}], "0.712`", "0.`", "0.007`", 
     RowBox[{"-", "1.717`"}], 
     RowBox[{"-", "1.067`"}]},
    {"\<\"HHS 8\"\>", 
     RowBox[{"-", "2.741`"}], 
     RowBox[{"-", "2.327`"}], 
     RowBox[{"-", "0.977`"}], "0.917`", 
     RowBox[{"-", "0.364`"}], "1.04`", 
     RowBox[{"-", "0.007`"}], "0.`", 
     RowBox[{"-", "1.809`"}], 
     RowBox[{"-", "1.014`"}]},
    {"\<\"HHS 9\"\>", 
     RowBox[{"-", "0.507`"}], "0.433`", "1.139`", "3.495`", 
     "3.6910000000000003`", "3.`", "1.72`", "1.809`", "0.`", "0.542`"},
    {"\<\"HHS 10\"\>", 
     RowBox[{"-", "1.961`"}], 
     RowBox[{"-", "1.548`"}], "0.136`", "2.247`", "0.883`", "1.714`", 
     "1.067`", "1.014`", 
     RowBox[{"-", "0.54`"}], "0.`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.697917733358129*^9, 3.697918148127685*^9, 
  3.697918262292471*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 1152},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 161, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[766, 29, 830, 21, 138, "Input"],
Cell[1599, 52, 498, 9, 44, "Print"]
}, Open  ]],
Cell[2112, 64, 706, 21, 54, "Input"],
Cell[2821, 87, 827, 25, 120, "Input"],
Cell[3651, 114, 2941, 83, 291, "Input"],
Cell[CellGroupData[{
Cell[6617, 201, 210, 4, 32, "Input"],
Cell[6830, 207, 32463, 712, 413, "Output"]
}, Open  ]],
Cell[39308, 922, 1881, 56, 78, "Input"],
Cell[CellGroupData[{
Cell[41214, 982, 772, 17, 54, "Input"],
Cell[41989, 1001, 156394, 2756, 260, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198420, 3762, 8867, 204, 489, "Input"],
Cell[207290, 3968, 5974, 119, 769, "Output"]
}, Open  ]],
Cell[213279, 4090, 2317, 64, 117, "Input"],
Cell[CellGroupData[{
Cell[215621, 4158, 404, 9, 32, "Input"],
Cell[216028, 4169, 2908, 75, 317, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

